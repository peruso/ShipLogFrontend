// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ship_Review.Data;

#nullable disable

namespace Ship_Review.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231207071458_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Ship_Review.Models.CurrentVoyage", b =>
                {
                    b.Property<int>("CurrentVoyageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ETA")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastPort")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastUpdate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ShipInfoId")
                        .HasColumnType("int");

                    b.HasKey("CurrentVoyageId");

                    b.HasIndex("ShipInfoId");

                    b.ToTable("CurrentVoyages");
                });

            modelBuilder.Entity("Ship_Review.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Ship_Review.Models.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OwnerId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Ship_Review.Models.ShipEvaluation", b =>
                {
                    b.Property<int>("ShipEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("CrewAttitudeMax")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("CrewAttitudeMin")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("CrewAttitudeValue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("CrewPerformanceMax")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("CrewPerformanceMin")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("CrewPerformanceValue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FuelEfficiencyMax")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FuelEfficiencyMin")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("FuelEfficiencyValue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("SafetyScoreMax")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("SafetyScoreMin")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("SafetyScoreValue")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("ShipInfoId")
                        .HasColumnType("int");

                    b.Property<byte>("VesselQualityMax")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("VesselQualityMin")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("VesselQualityValue")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("ShipEvaluationId");

                    b.HasIndex("ShipInfoId");

                    b.ToTable("ShipEvaluations");
                });

            modelBuilder.Entity("Ship_Review.Models.ShipInfo", b =>
                {
                    b.Property<int>("ShipInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte>("Beam")
                        .HasColumnType("tinyint unsigned");

                    b.Property<ushort>("BuildYear")
                        .HasColumnType("smallint unsigned");

                    b.Property<decimal>("Draught")
                        .HasColumnType("decimal(65,30)");

                    b.Property<uint>("Dwt")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("GrossTon")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Imo")
                        .HasColumnType("int unsigned");

                    b.Property<ushort>("Length")
                        .HasColumnType("smallint unsigned");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ShipInfoId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("ShipInfos");
                });

            modelBuilder.Entity("Ship_Review.Models.CurrentVoyage", b =>
                {
                    b.HasOne("Ship_Review.Models.ShipInfo", "ShipInfo")
                        .WithMany("CurrentVoyages")
                        .HasForeignKey("ShipInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipInfo");
                });

            modelBuilder.Entity("Ship_Review.Models.ShipEvaluation", b =>
                {
                    b.HasOne("Ship_Review.Models.ShipInfo", "ShipInfo")
                        .WithMany("ShipEvaluations")
                        .HasForeignKey("ShipInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipInfo");
                });

            modelBuilder.Entity("Ship_Review.Models.ShipInfo", b =>
                {
                    b.HasOne("Ship_Review.Models.Manager", "Manager")
                        .WithMany("ShipInfos")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ship_Review.Models.Owner", "Owner")
                        .WithMany("ShipInfos")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Ship_Review.Models.Manager", b =>
                {
                    b.Navigation("ShipInfos");
                });

            modelBuilder.Entity("Ship_Review.Models.Owner", b =>
                {
                    b.Navigation("ShipInfos");
                });

            modelBuilder.Entity("Ship_Review.Models.ShipInfo", b =>
                {
                    b.Navigation("CurrentVoyages");

                    b.Navigation("ShipEvaluations");
                });
#pragma warning restore 612, 618
        }
    }
}
